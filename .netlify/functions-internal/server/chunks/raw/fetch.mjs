// ROLLUP_NO_REPLACE 
 const fetch = "{\"parsed\":{\"_path\":\"/blog/fetch\",\"_dir\":\"blog\",\"_draft\":false,\"_partial\":false,\"_locale\":\"\",\"_empty\":false,\"title\":\"Mémo Fetch\",\"description\":\"\",\"author\":\"@Light\",\"dates\":{\"published\":\"2023-02-21\"},\"body\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"// note le ref peut contenir tout type de données\\r\\nconst sort = ref({ query: \\\"nothing\\\" });\\r\\n// Dans un cas d'utilisation de refresh ne surtout pas oublier le ()\\r\\nconst {\\r\\n  data: jobs,\\r\\n  pending,\\r\\n  refresh,\\r\\n  error,\\r\\n} = await useFetch(() => `/api/job/job?query=${sort.value.query}`);\\r\\n\\r\\nfunction sortJobs() {\\r\\n  sort.value.query = \\\"orderBy\\\";\\r\\n  refresh();\\r\\n}\\n\",\"language\":\"js\",\"meta\":null},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"// note le ref peut contenir tout type de données\\r\\nconst sort = ref({ query: \\\"nothing\\\" });\\r\\n// Dans un cas d'utilisation de refresh ne surtout pas oublier le ()\\r\\nconst {\\r\\n  data: jobs,\\r\\n  pending,\\r\\n  refresh,\\r\\n  error,\\r\\n} = await useFetch(() => `/api/job/job?query=${sort.value.query}`);\\r\\n\\r\\nfunction sortJobs() {\\r\\n  sort.value.query = \\\"orderBy\\\";\\r\\n  refresh();\\r\\n}\\n\"}]}]}]}],\"toc\":{\"title\":\"\",\"searchDepth\":2,\"depth\":2,\"links\":[]}},\"_type\":\"markdown\",\"_id\":\"content:blog:fetch.md\",\"_source\":\"content\",\"_file\":\"blog/fetch.md\",\"_extension\":\"md\"},\"hash\":\"05HD9Yyyqs\"}";

export { fetch as default };
//# sourceMappingURL=fetch.mjs.map
